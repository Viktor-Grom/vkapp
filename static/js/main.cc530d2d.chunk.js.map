{"version":3,"sources":["index.js"],"names":["bridge","send","activePanel","panelMain","size","style","marginTop","panelUserMe","panelUsers","staticMenu","onClick","a","ReactDOM","render","App","document","getElementById","userId","URLSearchParams","window","location","search","get","urlVkGet","fetch","method","vkGet","json","userLink","response","photo_100","userName","first_name","last_name","before","src","description","id","left","React","Component"],"mappings":"uQAKAA,IAAOC,KAAK,gBAEZ,IAAIC,EAAc,OACdC,EAAY,kBAAC,IAAD,CAAeC,KAAK,SAASC,MAAO,CAAEC,UAAW,SAC7DC,EAAc,kBAAC,IAAD,CAAeH,KAAK,SAASC,MAAO,CAAEC,UAAW,SAC/DE,EAAa,kBAAC,IAAD,CAAeJ,KAAK,SAASC,MAAO,CAAEC,UAAW,SAC9DG,EAAa,CAAE,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQL,KAAK,KAAKM,Q,4CAAlB,oFAAuE,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAQN,KAAK,KAAKM,Q,4CAAlB,4D,4CAapG,sBAAAC,EAAA,sDACAT,EAAc,SACdU,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,SAFjD,4C,kEAIA,sBAAAL,EAAA,sDACAT,EAAc,QACdU,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,SAFjD,4C,sBAfC,cAAAL,EAAA,0CAAAA,EAAA,6DACGM,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,cACzDC,EAAW,mFAAqFN,EAAS,+HAF5G,SAGiBO,MAAMD,EAAU,CAACE,OAAQ,QAH1C,cAGGC,EAHH,gBAIiBA,EAAMC,OAJvB,OAIGD,EAJH,OAKGE,EAAWF,EAAMG,SAAS,GAAKC,UAC/BC,EAAWL,EAAMG,SAAS,GAAKG,WAAa,IAAMN,EAAMG,SAAS,GAAKI,UAC1E9B,EAAY,CAAE,kBAAC,IAAD,KAAK,kBAAC,IAAD,CAAM+B,OAAQ,kBAAC,IAAD,CAAQC,IAAKP,IAAcQ,YAAY,gBAAML,IAAwBtB,GACtGG,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,SARhD,8C,IAoBKF,E,uKAEJ,OACE,kBAAC,IAAD,CAAMZ,YAAaA,GACjB,kBAAC,IAAD,CAAOmC,GAAG,QACR,kBAAC,IAAD,iCACPlC,GAEK,kBAAC,IAAD,CAAOkC,GAAG,UACV,kBAAC,IAAD,CAAaC,KAAM,kBAAC,IAAD,CAAiB5B,QAAS,WAAOR,EAAY,OAAQU,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,aAAzH,gEACLT,GAEK,kBAAC,IAAD,CAAO8B,GAAG,SACV,kBAAC,IAAD,CAAaC,KAAM,kBAAC,IAAD,CAAiB5B,QAAS,WAAOR,EAAY,OAAQU,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,aAAzH,0DACLR,Q,GAdiB+B,IAAMC,WAmBxB5B,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.cc530d2d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { View, Panel, PanelHeader, Div, Button, Cell, Avatar, ScreenSpinner, Header, PanelHeaderBack } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nbridge.send(\"VKWebAppInit\");\n\nvar activePanel = \"main\";\nvar panelMain = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar panelUserMe = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar panelUsers = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar staticMenu = [ <Div><Button size=\"xl\" onClick={usersMeInfo}>Моя статистика</Button></Div>, <Div><Button size=\"xl\" onClick={usersInfo}>Участники</Button></Div> ];\n\n(async function(){\nvar userId = new URLSearchParams(window.location.search).get(\"vk_user_id\");\nvar urlVkGet = \"https://cors-anywhere.herokuapp.com/https://api.vk.com/method/users.get?user_id=\" + userId + \"&v=5.107&fields=photo_100&access_token=9d0a4679de9f92b8544f85b68de8bec1d34ff98994f27108ac9183c52997d5a67d9430ca710daacb5c539\";\nvar vkGet = await fetch(urlVkGet, {method: \"GET\"});\nvar vkGet = await vkGet.json();\nvar userLink = vkGet.response[\"0\"].photo_100;\nvar userName = vkGet.response[\"0\"].first_name + \" \" + vkGet.response[\"0\"].last_name;\npanelMain = [ <Div><Cell before={<Avatar src={userLink} />} description=\"Вы\">{userName}</Cell></Div>, staticMenu ];\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}())\n\nasync function usersMeInfo() {\nactivePanel = \"userMe\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}\nasync function usersInfo() {\nactivePanel = \"users\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nclass App extends React.Component {\nrender() {\n  return (\n    <View activePanel={activePanel}>\n      <Panel id=\"main\">\n        <PanelHeader>Меню</PanelHeader>\n{panelMain}\n      </Panel>\n      <Panel id=\"userMe\">\n      <PanelHeader left={<PanelHeaderBack onClick={() => {activePanel=\"main\"; ReactDOM.render(<App />, document.getElementById(\"root\"))}}/>}>Статистика</PanelHeader>\n{panelUserMe}\n      </Panel>\n      <Panel id=\"users\">\n      <PanelHeader left={<PanelHeaderBack onClick={() => {activePanel=\"main\"; ReactDOM.render(<App />, document.getElementById(\"root\"))}}/>}>Участники</PanelHeader>\n{panelUsers}\n      </Panel>\n    </View>\n);}}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}