{"version":3,"sources":["index.js"],"names":["bridge","send","activePanel","panelMain","size","style","marginTop","panelUserMe","panelUsers","staticMenu","onClick","userId","userLink","userName","meStatus","meBalans","meActions","meWinRate","meWins","meLose","meWinRateDop","meGun","meWinStrick","a","ReactDOM","render","App","document","getElementById","urlMeUserGet","fetch","method","meUserGet","json","before","src","description","header","value","display","indicator","mode","usersMeInfoReload","URLSearchParams","window","location","search","get","urlVkGet","vkGet","response","photo_100","first_name","last_name","id","left","React","Component"],"mappings":"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","file":"static/js/main.bf5af52e.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport { View, Panel, PanelHeader, Div, Button, Cell, Avatar, ScreenSpinner, Header, PanelHeaderBack, InfoRow, Progress, Separator, Counter } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nbridge.send(\"VKWebAppInit\");\n\nvar activePanel = \"main\";\nvar panelMain = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar panelUserMe = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar panelUsers = <ScreenSpinner size=\"medium\" style={{ marginTop: \"50%\" }}/>;\nvar staticMenu = [ <Div><Button size=\"xl\" onClick={usersMeInfo}>Моя статистика</Button></Div>, <Div><Button size=\"xl\" onClick={usersInfo}>Участники</Button></Div> ];\nvar userId = \"\";\nvar userLink = \"\";\nvar userName = \"\";\nvar meStatus = \"\";\nvar meBalans = \"\";\nvar meActions = \"\";\nvar meWinRate = \"\";\nvar meWins = \"\";\nvar meLose = \"\";\nvar meWinRateDop = \"\";\nvar meGun = \"\";\nvar meWinStrick = \"\";\n\n(async function(){\nuserId = new URLSearchParams(window.location.search).get(\"vk_user_id\");\nvar urlVkGet = \"https://cors-anywhere.herokuapp.com/https://api.vk.com/method/users.get?user_id=\" + userId + \"&v=5.107&fields=photo_100&access_token=9d0a4679de9f92b8544f85b68de8bec1d34ff98994f27108ac9183c52997d5a67d9430ca710daacb5c539\";\nvar vkGet = await fetch(urlVkGet, {method: \"GET\"});\nvar vkGet = await vkGet.json();\nuserLink = vkGet.response[\"0\"].photo_100;\nuserName = vkGet.response[\"0\"].first_name + \" \" + vkGet.response[\"0\"].last_name;\npanelMain = [ <Div><Cell before={<Avatar src={userLink} />} description=\"Это Вы\">{userName}</Cell></Div>, staticMenu ];\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}())\n\nasync function usersMeInfo() {\nactivePanel = \"userMe\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\nvar urlMeUserGet = \"https://cors-anywhere.herokuapp.com/http://f0442357.xsph.ru/botTest/VkApp/userMeInfo.php?user_id=\" + userId;\nvar meUserGet = await fetch(urlMeUserGet, {method: \"GET\"});\nvar meUserGet = await meUserGet.json();\n\nmeStatus = meUserGet.meStatus;\nmeBalans = meUserGet.meBalans;\nmeActions = meUserGet.meActions;\nmeWinRate = meUserGet.meWinRate;\nmeWins = meUserGet.meWins;\nmeLose = meUserGet.meLose;\nmeWinRateDop = meUserGet.meWinRateDop;\nmeGun = meUserGet.meGun;\nmeWinStrick = meUserGet.meWinStrick;\n\npanelUserMe = [ <Div><Cell before={<Avatar src={userLink} />} description={meStatus}>{userName}</Cell><Header>{\"Баланс: \" + meBalans}</Header><Header>{\"Действий: \" + meActions}</Header></Div>, <Separator />, <Div><InfoRow header={\"Винрейт: \" + meWinRate + \"%\"}><Progress value={meWinRate} /></InfoRow></Div>, <Div style={{display: 'flex'}}><Header indicator={<Counter mode=\"primary\">{meWins}</Counter>}>Побед</Header><Header indicator={<Counter mode=\"prominent\">{meLose}</Counter>}>Поражений</Header></Div>, <Div><Header indicator={<Counter>{meWinRateDop}</Counter>}>Шанс победы</Header><Header indicator={<Counter>{meGun}</Counter>}>Оружие</Header><Header indicator={<Counter>{meWinStrick + \" games\"}</Counter>}>Winstrick</Header></Div>, <Separator />, <Div><Button size=\"xl\" onClick={usersMeInfoReload}>Обновить</Button></Div>];\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}\nasync function usersMeInfoReload() {\n\n\n}\nasync function usersInfo() {\nactivePanel = \"users\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n}\n\nclass App extends React.Component {\nrender() {\n  return (\n    <View activePanel={activePanel}>\n      <Panel id=\"main\">\n        <PanelHeader>Меню</PanelHeader>\n{panelMain}\n      </Panel>\n      <Panel id=\"userMe\">\n      <PanelHeader left={<PanelHeaderBack onClick={() => {activePanel=\"main\"; ReactDOM.render(<App />, document.getElementById(\"root\"))}}/>}>Статистика</PanelHeader>\n{panelUserMe}\n      </Panel>\n      <Panel id=\"users\">\n      <PanelHeader left={<PanelHeaderBack onClick={() => {activePanel=\"main\"; ReactDOM.render(<App />, document.getElementById(\"root\"))}}/>}>Участники</PanelHeader>\n{panelUsers}\n      </Panel>\n    </View>\n);}}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}